package day15;
/*
 * 需求: 用接口的方式实现关于USB规范的案例
 */

public class USBDemo {
	public static void main(String[] args) {
		//测试
		//使用鼠标功能
		MUSB usb1 = new Mouse();
		//Board.jack(usb1);
		
		//创建设备对象 并插入主板插槽口
		MUSB usb2 = new Keyboard();
		MUSB usb3 = new Printer();
		Board.jack(usb1);
		Board.jack(usb2);
		Board.jack(usb3);
	}

}

//定义一个MUSB接口规范
interface MUSB {
	void function();
}

//鼠标类
class Mouse implements MUSB{
	public void function(){
		System.out.println("鼠标在移动......");
	}
}

//键盘类
class Keyboard implements MUSB{
	public void function(){
		System.out.println("键盘啪啪啪信息输入ing.........");
	}
}

//打印机类
class Printer implements MUSB{
	public void function(){
		System.out.println("打印机吱吱地在打印ing........");
	}
}

//主板类-
class Board{
	private static MUSB[] usbs = new MUSB[6];
	
	//插入主板插槽功能
	public static void jack(MUSB usb){
		for (int i = 0; i < 6; i++) {
			if (usbs[i] == null) {
				usbs[i] = usb;
				System.out.println((i + 1) + "口指示灯亮起--已插入");
				return;
			}else{
				System.out.println("插槽口已插满");
			}
		}
	}
	
	//调用设备功能
	public static void call(){
		for(MUSB u : usbs){
			if (u != null) {
				u.function();
			}
		}
	}
	
	//拨出设备插线
	public static void setAside(MUSB usb){
		for (int i = 0; i < 6; i++) {
			if (usbs[i].equals(usb)) {
				
				System.out.println("-------true");
			}else{
				System.out.println("----false");
			}
		}
	}
	
}
