package com._520it.Map;

import java.util.HashMap;
import java.util.Map;
import java.util.TreeMap;

public class MapTest {
	public static void main(String[] args) {
		String str = "asgdgsafvhsjedvaeaasnrfjhsvfhzxjfhzfvszf";
		Map<Character, Integer> map = new HashMap<>();
		
		for(Character ele : str.toCharArray()){
			if(map.containsKey(ele)){
				Integer old = map.get(ele);
				map.put(ele, old + 1);
			}else{
				map.put(ele, 1);
			}
		}
		System.out.println(map);// 打印map
		
		Map<Integer, String> map2 = new TreeMap<>(); //定义一个新Map集合,用于存储 <出现的次数, 出现的字母>
		//增强for循环遍历Set集合map
		for(Character ele : map.keySet()){
			//得到map集合每一个key
			//判断当前出现次数是否在map2的key中
			if(map2.containsKey(map.get(ele))){
				String old = String.valueOf(map2.get(map.get(ele)));//获取旧的map2的value值
				map2.put(map.get(ele), old + " " + String.valueOf(ele));  //拼接字符串后存储到map2的vlaue
			}else{
				map2.put(map.get(ele), String.valueOf(ele));           //若map2的key不存在当前的出现次数,直接put添加
			}
		}
		System.out.println(map2);
	}
	
	
}
