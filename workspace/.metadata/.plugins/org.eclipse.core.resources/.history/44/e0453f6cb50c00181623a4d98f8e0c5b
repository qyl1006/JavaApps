package cn.wolfcode.smis.util;

import java.beans.PropertyDescriptor;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import cn.wolfcode.smis.domain.Student;
import lombok.Cleanup;

//抽取JDBCTemplate模板
public class JdbcTemplate {
	//DML模板
	public static void update(String sql, Object... params) {
		try {
			//获取连接对象
			@Cleanup
			Connection conn = JdbcUtil.getConn();
			//获取语句对象
			@Cleanup
			PreparedStatement ps = conn.prepareStatement(sql);
			//给占位符设值
			for (int i = 0; i < params.length; i++) {
				ps.setObject(i + 1, params[i]);
			}
			//执行sql语句
			ps.executeUpdate(); //不需要参数
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	//DQL模板
	public static List<Student> query(String sql, Object... params) {
		List<Student> list = new ArrayList<>();
		try {
			//获取连接对象
			@Cleanup
			Connection conn = JdbcUtil.getConn();
			
			//获取语句对象
			@Cleanup
			PreparedStatement ps = conn.prepareStatement(sql);
			//给占位符设值
			for (int i = 0; i < params.length; i++) {
				ps.setObject(i + 1, params[i]);
			}
			//执行sql语句, 返回一个结果集
			ResultSet rs = ps.executeQuery(); //不需要参数
			
			Class<Student> clz = Student.class; //返回类型的字节码对象
			PropertyDescriptor[] pds = null;
			
			while(rs.next()){
				
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

		return list;
	}
}
